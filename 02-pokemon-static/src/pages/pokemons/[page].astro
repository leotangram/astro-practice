---
import type { GetStaticPaths } from 'astro'
// Only run this code on the server - Build time
import PokemonCard from '../../components/pokemons/PokemonCard.astro'
import type { PokemonListResponse } from '../../interfaces'
import MainLayout from '../../layouts/MainLayout.astro'
import Title from '@components/shared/Title.astro'

const title = 'Pokémon Static | Home'

export const getStaticPaths = (async ({ paginate }) => {
  const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151')
  const { results } = (await response.json()) as PokemonListResponse

  return paginate(results, { pageSize: 20 })
}) satisfies GetStaticPaths

const { page } = Astro.props
---

<MainLayout title={title}>
  <Title>Listado paginado de Pókemons</Title>
  <section
    role="list"
    aria-label="Listado de Pókemons"
    class="grid grid-cols-2 sm:grid-cols-4 md:grid-cols-5 gap-4 mt-5"
  >
    {page.data.map(({ name, url }) => <PokemonCard name={name} url={url} />)}
  </section>
  <section class="flex mt-10 gap-2 items-center">
    <!-- {
      page.url.prev && (
        <a class="btn" href={page.url.prev}>
          Anteriores
        </a>
      )
    }
    {
      page.url.next && (
        <a class="btn" href={page.url.next}>
          Siguientes
        </a>
      )
    } -->
    <a class:list={['btn', { disabled: !page.url.prev }]} href={page.url.prev}>
      Anteriores
    </a>
    <a class:list={['btn', { disabled: !page.url.next }]} href={page.url.next}>
      Siguientes
    </a>
    <div class="flex flex-1"></div>
    <span>Página {page.currentPage}</span>
  </section>
</MainLayout>

<style>
  .btn {
    @apply bg-blue-500 p-2 text-white rounded-md;
  }

  .disabled {
    @apply bg-gray-600 text-gray-400;
  }
</style>
